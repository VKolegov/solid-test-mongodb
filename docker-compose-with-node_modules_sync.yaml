version: '3.1'

services:

  frontend:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile.nodesync
    environment:
      - VITE_FRONTEND_PORT
      - VITE_BACKEND_PORT
    entrypoint: ["sh", "/app/start.sh"]
    volumes:
      - './frontend:/app'
      - './frontend/node_modules:/app/node_modules/'
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"

  node:
    build:
      context: ./backend
      dockerfile: ./Dockerfile.nodesync
    entrypoint: ["sh", "/node-server/start.sh"]
    volumes:
      - './backend:/node-server'
      - './backend/node_modules:/node-server/node_modules'
    environment:
      - FRONTEND_PORT
    ports:
      - "${BACKEND_PORT}:80"
    networks:
      - app-network
    depends_on:
      - mongodb


  mongodb:
    image: mongo:4.4.2
    environment:
      - MONGO_INITDB_DATABASE=solid
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./db:/data/db
    ports:
      - "27017:27017"
    restart: always
    networks:
      - app-network

networks:
  app-network:
    driver: bridge